@charset "UTF-8";@font-face{font-family:"Celestina";src:url(../fonts/Celestina/Celestina.eot?) format("eot"),url(../fonts/Celestina/Celestina.woff2) format("woff2"),url(../fonts/Celestina/Celestina.woff) format("woff"),url(../fonts/Celestina/Celestina.ttf) format("truetype"),url(../fonts/Celestina/Celestina.svg#Celestina) format("svg")}@font-face{font-family:"HandbookBold";src:url(../fonts/Handbook/pfhandbookpro-bold-webfont.eot?) format("eot"),url(../fonts/Handbook/pfhandbookpro-bold-webfont.woff2) format("woff2"),url(../fonts/Handbook/pfhandbookpro-bold-webfont.woff) format("woff"),url(../fonts/Handbook/pfhandbookpro-bold-webfont.ttf) format("truetype"),url(../fonts/Handbook/pfhandbookpro-bold-webfont.svg#HandbookBold) format("svg")}@font-face{font-family:"HandbookBlack";src:url(../fonts/Handbook/pfhandbookpro-black-webfont.eot?) format("eot"),url(../fonts/Handbook/pfhandbookpro-black-webfont.woff2) format("woff2"),url(../fonts/Handbook/pfhandbookpro-black-webfont.woff) format("woff"),url(../fonts/Handbook/pfhandbookpro-black-webfont.ttf) format("truetype"),url(../fonts/Handbook/pfhandbookpro-black-webfont.svg#HandbookBlack) format("svg")}@font-face{font-family:"HandbookRegular";src:url(../fonts/Handbook/pfhandbookpro-regular-webfont.eot?) format("eot"),url(../fonts/Handbook/pfhandbookpro-regular-webfont.woff2) format("woff2"),url(../fonts/Handbook/pfhandbookpro-regular-webfont.woff) format("woff"),url(../fonts/Handbook/pfhandbookpro-regular-webfont.ttf) format("truetype"),url(../fonts/Handbook/pfhandbookpro-regular-webfont.svg#HandbookRegular) format("svg")}@font-face{font-family:"HandbookThin";src:url(../fonts/Handbook/pfhandbookpro-thin-webfont.eot?) format("eot"),url(../fonts/Handbook/pfhandbookpro-thin-webfont.woff2) format("woff2"),url(../fonts/Handbook/pfhandbookpro-thin-webfont.woff) format("woff"),url(../fonts/Handbook/pfhandbookpro-thin-webfont.ttf) format("truetype"),url(../fonts/Handbook/pfhandbookpro-thin-webfont.svg#HandbookThin) format("svg")}@font-face{font-family:"HandbookMedium";src:url(../fonts/Handbook/pfhandbookpro-medium-webfont.eot?) format("eot"),url(../fonts/Handbook/pfhandbookpro-medium-webfont.woff2) format("woff2"),url(../fonts/Handbook/pfhandbookpro-medium-webfont.woff) format("woff"),url(../fonts/Handbook/pfhandbookpro-medium-webfont.ttf) format("truetype"),url(../fonts/Handbook/pfhandbookpro-medium-webfont.svg#HandbookMedium) format("svg")}@font-face{font-family:"ProximaNovaBlack";src:url(../fonts/ProximaNova/proximanova-black-webfont.eot?) format("eot"),url(../fonts/ProximaNova/proximanova-black-webfont.woff2) format("woff2"),url(../fonts/ProximaNova/proximanova-black-webfont.woff) format("woff"),url(../fonts/ProximaNova/proximanova-black-webfont.ttf) format("truetype"),url(../fonts/ProximaNova/proximanova-black-webfont.svg#ProximaNovaBlack) format("svg")}@font-face{font-family:"ProximaNovaBold";src:url(../fonts/ProximaNova/proximanova-bold-webfont.eot?) format("eot"),url(../fonts/ProximaNova/proximanova-bold-webfont.woff2) format("woff2"),url(../fonts/ProximaNova/proximanova-bold-webfont.woff) format("woff"),url(../fonts/ProximaNova/proximanova-bold-webfont.ttf) format("truetype"),url(../fonts/ProximaNova/proximanova-bold-webfont.svg#ProximaNovaBold) format("svg")}@font-face{font-family:"ProximaNovaRegular";src:url(../fonts/ProximaNova/proximanova-regular-webfont.eot?) format("eot"),url(../fonts/ProximaNova/proximanova-regular-webfont.woff2) format("woff2"),url(../fonts/ProximaNova/proximanova-regular-webfont.woff) format("woff"),url(../fonts/ProximaNova/proximanova-regular-webfont.ttf) format("truetype"),url(../fonts/ProximaNova/proximanova-regular-webfont.svg#ProximaNovaRegular) format("svg")}@font-face{font-family:"ProximaNovaLight";src:url(../fonts/ProximaNova/proximanova-light-webfont.eot?) format("eot"),url(../fonts/ProximaNova/proximanova-light-webfont.woff2) format("woff2"),url(../fonts/ProximaNova/proximanova-light-webfont.woff) format("woff"),url(../fonts/ProximaNova/proximanova-light-webfont.ttf) format("truetype"),url(../fonts/ProximaNova/proximanova-light-webfont.svg#ProximaNovaLight) format("svg")}body,html{height:100%;width:100%}html{line-height:1;font-size:62.5%;-webkit-box-sizing:border-box;box-sizing:border-box;color:#474b57}body{font-size:1.6rem;font-family:"HandbookThin",sans-serif;font-weight:600;background-color:#fff}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}h1,h2,h3,h4,h5,h6,ol,p,ul{margin:0;padding:0;font-weight:400}ol,ul{list-style:none}a{text-decoration:none;color:#fff;cursor:pointer}button,input,select{outline:0}textarea{resize:none}audio,canvas,iframe,img,svg,video{vertical-align:middle}section{position:relative}.section{padding:50px 0}.container,.main-wrapper{position:relative;margin:0 auto}.main-wrapper{overflow:hidden;max-width:1920px}.container{padding-left:10px;padding-right:10px;max-width:1650px;width:100%}.row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-5px;margin-right:-5px}.row--between{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.laptop-visible,.phone-visible{display:none}.contact-phone{font-family:"ProximaNovaBold",sans-serif;color:#fff}.contact-phone.contact-phone--acsent,.contact-phone.contact-phone--acsent a,.contact-phone.contact-phone--blue,.nav.nav--acsent a{color:#4b79bb}.contact-phone a,.contact-phone span{display:block;text-align:right}.contact-phone__phone{font-size:3.5rem}.contact-phone__descr{font-family:"ProximaNovaLight",sans-serif;font-size:2.1rem}.citylife{position:relative;padding-top:200px;padding-bottom:290px}.citylife:before{content:'';position:absolute;top:0;left:0;right:0;bottom:0;background:#fff url(../img/citylife-bg-1920.jpg) no-repeat center/cover;opacity:.11}.citylife .reasons-heading__wrap{margin-bottom:50px}.citylife .reasons__content-descr{padding-right:0}.citylife .reasons__content-heading{font-family:"HandbookBold",sans-serif}.citylife__content-wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.citylife__content-right{width:60%;padding-left:120px;padding-right:50px}.citylife__content-left{width:40%}.citylife__content-left img,.logo-brand img{width:100%;height:auto}.citylife__item-name,.citylife__list-item{display:-webkit-box;display:-ms-flexbox;display:flex}.citylife__list-item{max-width:730px;width:100%;font-size:3.6rem}.citylife__item-name{-webkit-box-flex:1;-ms-flex:1;flex:1;margin-right:3px;font-family:"HandbookThin",sans-serif}.citylife__item-dots{-webkit-box-flex:1;-ms-flex:1;flex:1;border-bottom:1px dotted #000;margin-bottom:6px}.citylife__item-answer{font-family:"HandbookBold",sans-serif}.footer{padding:40px 20px;background-color:#fff;color:#4b79bb}.section-form{padding:100px 0;background:#d3d3d3 url(../img/consult-bg-1920.jpg) no-repeat center/cover}.section-form__heading{display:inline-block;font-size:7rem;font-weight:600}.section-form__heading-wrap{text-align:center;margin-bottom:90px}.section-form__heading-wrap span{color:#579dd8}.input__wrap-group{display:-webkit-box;display:-ms-flexbox;display:flex;max-width:1040px;width:100%;margin:0 auto;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0 30px}.input__wrap-group .input__wrap{margin-right:50px;margin-bottom:20px}.input__wrap-group .input__wrap:last-child,.nav li:last-child{margin-right:0}.input__wrap{max-width:460px;min-width:240px;width:100%}button,label{display:inline-block}button,input{border:0}input[type=tel],input[type=text]{font-family:"HandbookThin",sans-serif;width:100%;padding:20px 30px;font-size:3rem}label{position:relative;padding-left:10px}.label__text{font-size:3rem;font-weight:400}.form__line{margin-bottom:40px}.form__line:last-child{margin-bottom:0}.btn__wrap,.input__wrap-checkbox{text-align:center}.input__wrap-checkbox span{vertical-align:middle}.input__wrap-checkbox input:checked~.checkbox-styled:after{content:'âœ“'}.btn{font-family:"HandbookBold",sans-serif;background-color:#4b79bb;padding:30px 50px;color:#fff;text-transform:uppercase;font-size:3.8rem;cursor:pointer;-webkit-transition:background-color .3s;-o-transition:background-color .3s;transition:background-color .3s}.btn:hover{background-color:#3a6199}.input--checkbox{position:relative;left:-9999px}.checkbox-styled{position:absolute;display:inline-block;width:15px;height:15px;background-color:#fff;top:55%;left:0;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.checkbox-styled:after{content:'';position:absolute;color:red;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.header{position:fixed;z-index:100;top:0;left:0;right:0;min-height:90px;padding:20px;background-image:-o-linear-gradient(225deg,rgba(87,157,216,.75) 0%,rgba(87,157,216,.75) 42%,rgba(162,14,16,.75) 58%,rgba(162,14,16,.75) 100%);background-image:linear-gradient(-135deg,rgba(87,157,216,.75) 0%,rgba(87,157,216,.75) 42%,rgba(162,14,16,.75) 58%,rgba(162,14,16,.75) 100%);color:#fff}.header .row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.logo-brand{max-height:59px;max-width:69px;margin-top:-10px}.hero{position:relative;padding:0}#imageGallery img,.hero__bg{width:100%;height:auto}.hero__content{max-width:1320px;width:100%;margin:30px 100px 0;text-align:center;}.hero__content-wrap{position:absolute;top:0;left:0;right:0;bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__heading,.hero__subheading{display:inline-block;padding:10px;text-align:center;color:#fff}.hero__heading{background-color:#4b79bb;font-family:"ProximaNovaRegular",sans-serif;font-weight:400;font-size:5.4rem}.hero__heading-wrap{text-align:center;margin-bottom:20px}.hero__subheading{background-color:rgba(196,36,40,.7);font-family:"ProximaNovaBold",sans-serif;font-size:4.5rem;text-transform:uppercase}.list--flex{display:-webkit-box;display:-ms-flexbox;display:flex}.nav{font-family:"ProximaNovaRegular",sans-serif;margin-right:50px}.nav li{margin-right:25px}.nav li:after{content:'';position:absolute;bottom:7px;left:15px;height:2px;width:30%;background-color:#fff;opacity:0;-webkit-transition:.3s opacity;-o-transition:.3s opacity;transition:.3s opacity}.nav li.active:after,.nav li:hover:after,.nav.nav--acsent li.active:after,.nav.nav--acsent li:hover:after{opacity:1}.nav a{display:block;padding:10px;font-size:2.4rem}.nav.nav--acsent li:after{background-color:#4b79bb}.popup-home,.popup-home__wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.popup-home__wrap{visibility:hidden;top:0;left:0;width:100vw;height:100%;overflow:auto;font-size:2rem;position:fixed;z-index:1000}.popup-home__wrap.active{visibility:visible}.popup-home__wrap:after{content:'';position:fixed;top:0;left:0;right:0;bottom:0;background-color:rgba(0,0,0,.4)}.popup-home{position:relative;z-index:5;width:1200px;margin:auto;padding:20px;background-color:#fff;border-radius:10px}.popup-close{position:absolute;width:30px;height:30px;top:10px;right:10px;opacity:.5;-webkit-transition:.4s opacity;-o-transition:.4s opacity;transition:.4s opacity}.popup-close:hover,.project-home__item-wrap:hover:before{opacity:1}.popup-close:after,.popup-close:before{content:'';position:absolute;display:block;top:50%;left:50%;height:2px;width:100%;background-color:gray}.popup-close:before{-webkit-transform:translate(-50%,-50%) rotate(45deg);-ms-transform:translate(-50%,-50%) rotate(45deg);transform:translate(-50%,-50%) rotate(45deg)}.popup-close:after{-webkit-transform:translate(-50%,-50%) rotate(-45deg);-ms-transform:translate(-50%,-50%) rotate(-45deg);transform:translate(-50%,-50%) rotate(-45deg)}.popup-home__left{width:575px}#imageGallery li,.popup-home__title-line{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}#imageGallery li{height:100%;min-height:300px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.popup-home__right{font-family:"HandbookRegular",sans-serif;-webkit-box-flex:1;-ms-flex:1;flex:1;padding-left:10px;color:gray}.popup-home__right .popup-home__title-line{padding-top:5px}.popup-home__title-line{margin-bottom:10px}.popup-home__square,.popup-home__title{font-family:"HandbookRegular",sans-serif}.popup-home__title{font-size:5rem;color:#c42428;text-transform:uppercase;margin-right:20px}.popup-home__square{position:relative;font-size:2.4rem;color:#fff;padding:10px}.nav li,.popup-home__square span{position:relative}.popup-home__square:before{content:'';background-color:#c42428;position:absolute;top:0;left:0;right:0;bottom:0;-webkit-transform:skewX(-20deg);-ms-transform:skewX(-20deg);transform:skewX(-20deg)}.popup-home__coast,.popup-home__coat-val{font-size:5rem}.popup-home__coast{margin-right:10px}.popup-home__coat-val{font-family:"HandbookRegular",sans-serif;color:#c42428}.popup-home__ipoteca{font-size:2.4rem;margin-bottom:10px}.popup-home__descr{line-height:1.2;margin-bottom:20px}.popup-home__list-heading{font-family:"HandbookRegular",sans-serif;margin-bottom:10px}.popup-home__list{padding-left:20px;margin-bottom:20px}.popup-home__list-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:5px}.popup-home__item-dot{width:7px;height:7px;background-color:#c42428;border-radius:50%;margin-right:10px}.popup-home__form .input__wrap{margin-bottom:15px}.popup-home__form input{width:100%;padding:10px 10px 10px 20px;border:1px solid rgba(0,0,0,.3)}.popup-home__form .form__descr.form__descr--small{text-align:center;padding:0;margin-bottom:15px}.form__descr.form__descr--small a{color:#c42428}.btn__popup{display:block;background-color:#c42428;border-radius:0;font-family:"HandbookRegular",sans-serif;font-size:3rem;padding:10px 0}.lSAction>a{background-image:url(../img/controls.png)}.lSAction>.lSNext{right:20px}.lSSlideOuter .lSPager.lSGallery img{width:100%;max-width:unset}.lSPager.lSGallery{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.project-home{margin-top:-120px}.project-home .reasons-heading__wrap{margin-left:25%;margin-bottom:100px;padding-bottom:0}.project-home .reasons-heading__wrap span{margin-right:-150px;margin-left:0}.project-home .list .icon{min-height:120px;min-width:120px;fill:gray}.project-home .list__item{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0;-ms-flex-preferred-size:220px;flex-basis:220px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.project-home .list__item-descr{white-space:nowrap;font-size:1.8rem;color:gray}.project-home .section__subtitle{margin-bottom:50px}.project-home__slider{position:relative;margin-bottom:30px}.slick-slider-js{margin:10px 20px 0}.project-home__item{position:relative;padding:10px 10px 25px;margin:5px auto;max-width:490px;width:100%;background-color:#fff;-webkit-transition:.3s border-color,.3s color,.3s -webkit-box-shadow;-o-transition:.3s box-shadow,.3s border-color,.3s color;transition:.3s box-shadow,.3s border-color,.3s color;transition:.3s box-shadow,.3s border-color,.3s color,.3s -webkit-box-shadow;-webkit-box-shadow:0 0 1px 0 rgba(0,0,0,.3);box-shadow:0 0 1px 0 rgba(0,0,0,.3);cursor:pointer}.project-home__item:focus{outline:0}.project-home__item:hover .project-home__btn{border-color:#c42428;color:#c42428;background-color:transparent}.project-home__img{position:relative;background:no-repeat center;background-size:cover;width:100%;height:295px;margin-bottom:50px;pointer-events:none}.project-home__square{display:inline-block;position:absolute;bottom:0;right:30px;font-family:"HandbookMedium",sans-serif;font-size:4.2rem;color:#fff;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);padding:13px}.project-home__square span{position:relative;display:inline-block;height:42px;top:-12px}.project-home__square:before{content:'';position:absolute;padding:10px;top:-7px;left:-7px;right:-7px;bottom:-7px;background-color:#c42428;-webkit-transform:skewX(-20deg);-ms-transform:skewX(-20deg);transform:skewX(-20deg)}.project-home__square-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.project-home__item-content{font-family:"HandbookMedium",sans-serif;pointer-events:none}.project-home__title{font-family:"HandbookMedium",sans-serif;font-size:4.6rem;text-transform:uppercase;margin-bottom:10px}.project-home__subtitle,.project-home__subtitle-descr{font-family:"HandbookMedium",sans-serif;color:#c42428;font-size:4.2rem;margin-bottom:15px}.project-home__subtitle-descr{font-size:3rem;margin-bottom:0;margin-top:15px;font-weight:400}.project-home__ipoteca{font-size:3rem;margin-bottom:15px;color:gray}.project-home__ipoteca span{font-family:"HandbookMedium",sans-serif}.project-home__params{margin-bottom:25px;font-size:2.4rem;color:gray;font-weight:400}.project-home__line{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:10px}.project-home__key{min-width:125px;margin-right:50px}.project-home__key,.project-home__value{font-family:"HandbookMedium",sans-serif}.project-home__btn{display:inline-block;padding:1rem 3rem;font-size:3rem;color:gray;border:1px solid gray;margin:20px auto 3px;pointer-events:all;background:0 0;border-radius:10px;text-transform:none}.project-home__btn:hover{border-color:#c42428;color:#c42428}.wrap-center{text-align:center}.project-home__item-wrap{position:relative;max-width:490px;margin:0 auto}.project-home__item-wrap:before{opacity:0;position:absolute;content:'';top:-3px;left:-3px;right:-3px;bottom:-3px;background-image:-o-linear-gradient(25deg,#a20e10 0%,#a20e10 35%,#579dd8 65%,#579dd8 100%);background-image:linear-gradient(65deg,#a20e10 0%,#a20e10 35%,#579dd8 65%,#579dd8 100%);-webkit-transition:.3s opacity;-o-transition:.3s opacity;transition:.3s opacity}.question{padding:35px 20px}.question__wrap{text-align:center}.question__text{font-family:"HandbookThin",sans-serif;font-size:5.2rem}.picture-block{position:relative;padding:170px 0 50px}.picture-block:after{content:'';position:absolute;top:0;left:0;bottom:0;max-width:660px;width:100%;background-image:-o-linear-gradient(225deg,#579dd8 0%,#a20e10 100%);background-image:linear-gradient(-135deg,#579dd8 0%,#a20e10 100%)}.picture-block__img{position:relative;z-index:10}.picture-block.reverse{text-align:right}.picture-block.reverse .picture-block__img--mt{margin-top:-120px}.picture-block.reverse:after{left:unset;right:0}.reasons-heading{display:inline-block;text-align:right;font-family:"HandbookThin",sans-serif;font-size:8rem}.reasons-heading span{margin-left:-170px}.reasons-heading__wrap{padding-bottom:45px;margin-bottom:10px}.reasons-heading__wrap--right{text-align:right}.reasons-heading__wrap--right .reasons-heading{text-align:left;margin-left:-40px}.reasons-heading__wrap--center{text-align:center}.reasons--heading-up .reasons-heading,.reasons-heading__wrap--center .reasons-heading{text-align:left}.reasons-heading__decor{font-family:"Celestina",sans-serif;color:#579dd8;font-size:12rem;text-align:right}.reasons--heading-up .reasons-heading span{margin-left:-180px}.reasons--heading-up .reasons-heading__wrap{text-align:center}.reasons--last{padding-bottom:300px;-webkit-box-shadow:0 15px 25px 1px rgba(0,0,0,.1);box-shadow:0 15px 25px 1px rgba(0,0,0,.1)}.reasons__contet-list .list__item,.reasons__wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.reasons__wrap.reverse .reasons__content-wrap{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1;margin-right:80px}.reasons__wrap.reverse .reasons__content{padding-left:0}.reasons__content-wrap{position:relative;width:100%}.reasons__content-wrap--heading{padding-top:35px}.reasons__content-container{padding-left:190px}.reasons__content{padding-left:140px}.reasons__content-descr,.reasons__content-heading{font-family:"HandbookThin",sans-serif;font-weight:600;font-size:6.8rem;margin-bottom:50px}.reasons__content-descr{font-size:3.2rem;line-height:4rem;margin-bottom:75px;padding-right:100px}.reasons__content-decor{padding-top:170px}.reasons__content-decor:before{position:absolute;top:65px;content:'';display:block;height:24px;width:100%;background:url(../img/decor-wave.png) repeat-x center}.reasons__contet-list{padding-left:30px}.reasons__contet-list .list__item{margin-bottom:50px}.reasons__contet-list .list__item:last-child{margin-bottom:0}.reasons__contet-list .list__item-dot{width:40px;height:40px;background-color:#abd8ff;border-radius:50%;margin-right:30px;margin-top:7px}.reasons__contet-list .list__item-text{font-family:"HandbookThin",sans-serif;font-size:3.8rem;font-weight:600}.reasons__content-numbers{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;padding-left:30px}.reasons__content-numbers li{-ms-flex-preferred-size:280px;flex-basis:280px;width:50%;padding-right:30px;margin-bottom:70px}.reasons__item{font-family:"HandbookThin",sans-serif;max-width:380px;min-width:280px}.reasons__item-number{font-size:4rem;font-weight:600}.reasons__item-number span{font-family:"HandbookBlack",sans-serif;font-size:6.5rem;color:#579dd8}.reasons__item-text{font-size:3.2rem;font-weight:600}.slider-nav,.slider__nav{position:absolute;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.slider__nav{left:0;right:0;pointer-events:none}.slider-nav .icon,.slider__nav .icon{width:30px;height:30px;-webkit-transition:fill .4s;-o-transition:fill .4s;transition:fill .4s;cursor:pointer;pointer-events:all}.slider-nav .icon:hover,.slider__nav .icon:hover{fill:#4b79bb}.slider-nav{width:100%}.slider-nav__prev{margin-left:-50px}.slider-nav__next{margin-right:-50px}.slick-slide .slide:focus,.slick-slide:focus{outline:0}.slick-slide.slick-current{-webkit-transform:unset;-ms-transform:unset;transform:unset}@media screen and (max-width:1650px){body{font-size:1.5rem}.container{max-width:1110px}.contact-phone__phone{font-size:2.4rem}.contact-phone__descr{font-size:1.4rem}.citylife__content-right{padding-left:80px;padding-right:30px}.citylife__list-item{font-size:2.4rem;max-width:400px}.citylife__item-dots{margin-bottom:4px}.section-form{padding:40px 0 60px}.section-form__heading{font-size:4.8rem}.section-form__heading-wrap{margin-bottom:60px}.label__text,input[type=tel],input[type=text]{font-size:1.8rem}.btn{font-size:2.4rem;padding:15px 30px}.hero__content{max-width:900px}.hero__heading{font-size:3.6rem}.hero__subheading{font-size:3rem}.nav a,.popup-home__wrap{font-size:1.6rem}.popup-home{width:900px}.popup-home__left{width:350px;max-height:350px}.popup-home__title{font-size:3rem}.popup-home__square{font-size:2rem}.popup-home__coast,.popup-home__coat-val{font-size:3rem}.popup-home__ipoteca{font-size:2rem}.btn__popup{font-size:2.4rem}.project-home{margin-top:-200px}.project-home .reasons-heading__wrap{margin-bottom:70px}.project-home__item{max-width:315px}.project-home__img{height:200px;margin-bottom:20px}.project-home__square{font-size:2.4rem;padding:5px}.project-home__square span{height:18px}.project-home__title{font-size:2.4rem}.project-home__subtitle{font-size:2.4rem;margin-bottom:10px}.project-home__subtitle-descr{font-size:1.6rem;margin-top:5px;margin-bottom:3px}.project-home__ipoteca{font-size:1.8rem}.project-home__params{font-size:1.5rem}.project-home__key{min-width:80px}.project-home__item-wrap{max-width:315px}.question__text{font-size:3.6rem}.picture-block{padding:120px 0 50px}.picture-block:after{max-width:450px;max-height:730px}.picture-block__img{max-width:580px;max-height:580px}.picture-block.reverse .picture-block__img--mt{margin-top:-70px}.reasons-heading.reasons-heading--ml strong{margin-left:-60px}.reasons-heading.reasons-heading--ml span{margin-right:-90px}.reasons-heading{font-size:4.8rem}.reasons--heading-up .reasons-heading span,.reasons-heading span{margin-left:-120px}.reasons-heading__decor{font-size:8.2rem}.reasons__wrap.reverse .reasons__content-wrap{margin-right:40px}.reasons__content-container{padding-left:100px}.reasons__content{padding-left:40px}.reasons__content-descr{font-size:2.4rem;line-height:3rem;margin-bottom:55px}.reasons__content-decor{padding-top:120px}.reasons__contet-list .list__item-dot{width:25px;height:25px;margin-top:2px;margin-right:15px}.reasons__content-numbers li{margin-bottom:50px}.reasons__item-number{font-size:3rem}.reasons__item-number span{font-size:4.8rem}.reasons__contet-list .list__item-text,.reasons__item-text{font-size:2.4rem}}@media screen and (max-width:1200px){.container{padding-left:20px;padding-right:20px}}@media screen and (max-width:992px){.container{padding-left:10px;padding-right:10px}.popup-home{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.popup-home__left{margin-bottom:120px}}@media screen and (max-width:960px){.contact-phone__phone{font-size:1.8rem}.contact-phone__descr,.nav a{font-size:1.2rem}.hero__heading{font-size:2.4rem}.hero__subheading,.reasons__contet-list .list__item-text{font-size:2rem}.nav{margin-right:unset}.picture-block:after{max-width:265px;max-height:480px}.picture-block__img{max-width:340px;max-height:340px}.picture-block.reverse .picture-block__img--mt{max-width:390px;max-height:390px}.reasons-heading{font-size:3.6rem}.reasons-heading__decor{font-size:6rem}.reasons__content-container{padding-left:50px}.reasons__content-heading{font-size:3rem}.reasons__content-descr{padding-right:50px;font-size:1.8rem;line-height:2.4rem}.reasons__item-number{font-size:2.4rem}.reasons__item-number span{font-size:4rem}.reasons__item-text{font-size:2rem}}@media screen and (max-width:768px){body{font-size:1.4rem}.container{padding-left:10px;padding-right:10px}.laptop-visible{display:block}.citylife .reasons-heading__wrap strong{display:block;text-align:left}.citylife .reasons-heading{display:block;margin-left:50px;text-align:right}.citylife__content-right{padding-left:40px;padding-right:20px}.section-form__heading{font-size:3.6rem}.input__wrap-group{-ms-flex-wrap:wrap;flex-wrap:wrap}.input__wrap-group .input__wrap,.reasons-heading.reasons-heading--ml span,.reasons-heading__wrap span{margin-right:0}.nav,.reasons--last .reasons__content-decor:after{display:none}.popup-home{width:400px}.project-home .reasons-heading__wrap{text-align:left;margin-left:20%}.question__text{font-size:3.2rem}.picture-block:after{max-height:unset;max-width:unset;width:60%}.picture-block__img{max-width:700px;max-height:unset;width:100%;padding-right:100px}.picture-block.reverse .picture-block__img{padding-left:100px;padding-right:0}.picture-block.reverse .picture-block__img--mt{max-width:700px;max-height:unset;width:100%;padding-left:100px}.reasons--heading-up .reasons-heading span,.reasons-heading.reasons-heading--ml strong{margin-left:0}.reasons-heading__wrap{text-align:right;margin-right:20px}.reasons--heading-up .reasons-heading,.reasons--heading-up .reasons-heading__wrap{text-align:right}.reasons--last{padding-bottom:70px}.reasons--last .reasons__content-decor{padding-bottom:0}.reasons__wrap{display:block}.reasons__wrap.reverse .reasons__content-wrap .reasons__content-decor:after{right:0;left:unset}.reasons__content-decor{padding-bottom:100px}.reasons__content-decor:after{position:absolute;bottom:0;content:'';display:block;height:24px;width:70%;left:0;background:url(../img/decor-wave.png) repeat-x center}.reasons__content-decor:before{content:unset}}@media screen and (max-width:480px){body{font-size:1.3rem}.container{padding-left:10px;padding-right:10px}.phone-visible{display:block}.contact-phone{display:none}.citylife .reasons-heading{margin-left:20px}.citylife__content-wrap{display:block}.citylife__content-right{width:100%;padding-left:20px}.citylife__content-left{width:100%;padding:0 20px}.citylife__list-item{font-size:2rem;max-width:400px}.footer .row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer .logo-brand{margin-bottom:60px;max-width:180px;max-height:130px}.footer .logo-brand img{width:180px}.footer .contact-phone{display:block}.footer .contact-phone__phone{font-size:4.8rem;text-align:center}.footer .contact-phone__descr{font-size:3rem;text-align:center;font-family:"HandbookThin",sans-serif;font-weight:400}.header .row{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.hero__content{margin:145px 15px 0}.hero__content-wrap{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.hero__heading{font-size:2.8rem}.hero__subheading{font-size:2.4rem}.popup-home{width:100%;padding:5px}.popup-home__left{width:100%}.popup-home__title{font-size:2rem}.popup-home__square{font-size:1.6rem}.popup-home__square img{max-width:300px}.project-home .reasons-heading__wrap{margin-left:20px}.project-home .list__item{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.project-home .list__item-descr{font-size:1.4rem}.project-home .slider__arrow-prev{margin-left:-10px}.project-home .slider__arrow-next{margin-right:-10px}.slick-slider-js{margin:0 10px}.project-home__item-wrap{max-width:280px}.question__text,.reasons__contet-list .list__item-text{font-size:2.4rem}.picture-block__img{padding-right:50px}.picture-block.reverse .picture-block__img,.picture-block.reverse .picture-block__img--mt{padding-left:50px}.reasons-heading__wrap{margin-right:20px}.reasons__content-container{padding-left:40px;padding-right:20px}.reasons__content-heading{font-size:3.8rem}.reasons__content-descr{padding-right:0;font-size:2.4rem}.reasons__item-number{font-size:3rem}.reasons__item-number span{font-size:4.8rem}.reasons__item-text{font-size:2.4rem}.slick-slide{-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
